version: '3.8'
services:
  db:
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: shared_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  invoice:
    build: ./services/invoice
    depends_on:
      - db
    volumes:
      - ./services/invoice:/app
    ports:
      - "3001:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_NAME: shared_db
      DB_PASSWORD: password
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  authorization:
    build: ./services/authorization
    depends_on:
      - db
    volumes:
      - ./services/authorization:/app
    ports:
      - "3000:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_NAME: shared_db
      DB_PASSWORD: password

  gateway:
    build: ./services/gateway
    volumes:
      - ./services/gateway:/app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ping" ]
      interval: 5s
      timeout: 10s
      retries: 3
    depends_on:
      invoice:
        condition: service_healthy
    ports:
      - "5001:8080"
      - "5002:8081"
    environment:
      INVOICE_SERVICE_URL: "http://invoice:8080"
      AUTHORIZATION_SERVICE_URL: "http://authorization:8080"
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_NAME: shared_db
      DB_PASSWORD: password
    restart: always

volumes:
  postgres-data:
  go-cache:
