version: '3.8'
services:
  db:
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: shared_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  invoice:
    build: apps/invoice
    depends_on:
      - db
    volumes:
      - ./apps/invoice:/app
    ports:
      - "3001:8080"
    environment:
      KAFKA_URL: "kafka:29092"
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_NAME: shared_db
      DB_PASSWORD: password
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  authorization:
    build: apps/authorization
    depends_on:
      - db
    volumes:
      - ./apps/authorization:/app
    ports:
      - "3000:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_NAME: shared_db
      DB_PASSWORD: password

  gateway:
    build: apps/gateway
    volumes:
      - ./apps/gateway:/app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/ping" ]
      interval: 5s
      timeout: 10s
      retries: 3
    depends_on:
      invoice:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "5001:8080"
      - "5002:8081"
    environment:
      KAFKA_URL: "kafka:29092"
      INVOICE_SERVICE_URL: "http://invoice:8080"
      AUTHORIZATION_SERVICE_URL: "http://authorization:8080"
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_NAME: shared_db
      DB_PASSWORD: password
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD", "bash", "-c", "/usr/bin/kafka-broker-api-versions --bootstrap-server=localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka

volumes:
  postgres-data:
  go-cache:
